/**
 * AWS S3Lib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import { ListAllMyBucketsResult, LockController } from '../src';
import { testClient } from './testClient.js';
import { expectHeadersToMatch, makeApiCall } from './testHelper.js';

describe('LockController', () => {
  let controller : LockController;

  beforeAll(() => {
    controller = new LockController(testClient);
  });

  it('should Object Lock Configuration', async () => {
    const objectLock = '';

    const xAmzContentSha256 = 'UNSIGNED-PAYLOAD';

    const response = await makeApiCall(
      () => controller.objectLockConfiguration(objectLock, xAmzContentSha256)
    );

    expect(response.statusCode).toBe(200);

    const expectedHeaders = {
      'Content-Type': ['application/xml', false],
      'x-amz-id-2': [
        'lK0nRY4SWMbe78ZKCYukj1qQruNZkXqAFG2PenG8tnfWfGYcW9VgTs/zrOE3aP1eh38wZ5zns1c=',
        false,
      ],
      'x-amz-request-id': ['6C1098F5B6CDD08F', false],
      Date: ['Sun, 17 Nov 2019 06:41:24 GMT', false],
      'Transfer-Encoding': ['chunked', false],
      Server: ['AmazonS3', false],
    };

    expectHeadersToMatch(response.headers, expectedHeaders);

    const expected: ListAllMyBucketsResult = {
      owner: {
        iD: '94aebaef4c4fbbe84a36f076a1adbf6208742d219ac1cecb29939e262efabf56',
        displayName: 'kinlane',
      },
      buckets: {
        bucket: {
          name: 'working-demo-2',
          creationDate: '2019-11-17T04:45:13Z',
        },
      },
    };

    expect(response.result).not.toBeNull();
    expect(response.result).toEqual(expected);
  });

  it('should Object Lock Configuration Copy', async () => {
    const objectLock = '';

    const xAmzContentSha256 = 'UNSIGNED-PAYLOAD';

    const response = await makeApiCall(
      () => controller.objectLockConfigurationCopy(
        objectLock,
        xAmzContentSha256
      )
    );

    expect(response.statusCode).toBe(200);

    const expectedHeaders = {
      'Content-Type': ['application/xml', false],
      'x-amz-id-2': [
        'lK0nRY4SWMbe78ZKCYukj1qQruNZkXqAFG2PenG8tnfWfGYcW9VgTs/zrOE3aP1eh38wZ5zns1c=',
        false,
      ],
      'x-amz-request-id': ['6C1098F5B6CDD08F', false],
      Date: ['Sun, 17 Nov 2019 06:41:24 GMT', false],
      'Transfer-Encoding': ['chunked', false],
      Server: ['AmazonS3', false],
    };

    expectHeadersToMatch(response.headers, expectedHeaders);

    const expected: ListAllMyBucketsResult = {
      owner: {
        iD: '94aebaef4c4fbbe84a36f076a1adbf6208742d219ac1cecb29939e262efabf56',
        displayName: 'kinlane',
      },
      buckets: {
        bucket: {
          name: 'working-demo-2',
          creationDate: '2019-11-17T04:45:13Z',
        },
      },
    };

    expect(response.result).not.toBeNull();
    expect(response.result).toEqual(expected);
  });
});
