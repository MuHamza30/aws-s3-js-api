/*
 * AWSS3Lib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.amazonaws.s3.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonSetter;
import javax.xml.bind.annotation.XmlElement;

/**
 * This is a model class for Statement type.
 */
public class Statement {
    private String sid;
    private String effect;
    private Principal principal;
    private String action;
    private String resource;
    private Condition condition;

    /**
     * Default constructor.
     */
    public Statement() {
    }

    /**
     * Initialization constructor.
     * @param  sid  String value for sid.
     * @param  effect  String value for effect.
     * @param  principal  Principal value for principal.
     * @param  action  String value for action.
     * @param  resource  String value for resource.
     * @param  condition  Condition value for condition.
     */
    public Statement(
            String sid,
            String effect,
            Principal principal,
            String action,
            String resource,
            Condition condition) {
        this.sid = sid;
        this.effect = effect;
        this.principal = principal;
        this.action = action;
        this.resource = resource;
        this.condition = condition;
    }

    /**
     * Getter for Sid.
     * @return Returns the String
     */
    @JsonGetter("Sid")
    @XmlElement(name = "Sid")
    public String getSid() {
        return sid;
    }

    /**
     * Setter for Sid.
     * @param sid Value for String
     */
    @JsonSetter("Sid")
    public void setSid(String sid) {
        this.sid = sid;
    }

    /**
     * Getter for Effect.
     * @return Returns the String
     */
    @JsonGetter("Effect")
    @XmlElement(name = "Effect")
    public String getEffect() {
        return effect;
    }

    /**
     * Setter for Effect.
     * @param effect Value for String
     */
    @JsonSetter("Effect")
    public void setEffect(String effect) {
        this.effect = effect;
    }

    /**
     * Getter for Principal.
     * @return Returns the Principal
     */
    @JsonGetter("Principal")
    @XmlElement(name = "Principal")
    public Principal getPrincipal() {
        return principal;
    }

    /**
     * Setter for Principal.
     * @param principal Value for Principal
     */
    @JsonSetter("Principal")
    public void setPrincipal(Principal principal) {
        this.principal = principal;
    }

    /**
     * Getter for Action.
     * @return Returns the String
     */
    @JsonGetter("Action")
    @XmlElement(name = "Action")
    public String getAction() {
        return action;
    }

    /**
     * Setter for Action.
     * @param action Value for String
     */
    @JsonSetter("Action")
    public void setAction(String action) {
        this.action = action;
    }

    /**
     * Getter for Resource.
     * @return Returns the String
     */
    @JsonGetter("Resource")
    @XmlElement(name = "Resource")
    public String getResource() {
        return resource;
    }

    /**
     * Setter for Resource.
     * @param resource Value for String
     */
    @JsonSetter("Resource")
    public void setResource(String resource) {
        this.resource = resource;
    }

    /**
     * Getter for Condition.
     * @return Returns the Condition
     */
    @JsonGetter("Condition")
    @XmlElement(name = "Condition")
    public Condition getCondition() {
        return condition;
    }

    /**
     * Setter for Condition.
     * @param condition Value for Condition
     */
    @JsonSetter("Condition")
    public void setCondition(Condition condition) {
        this.condition = condition;
    }

    /**
     * Converts this Statement into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "Statement [" + "sid=" + sid + ", effect=" + effect + ", principal=" + principal
                + ", action=" + action + ", resource=" + resource + ", condition=" + condition
                + "]";
    }

    /**
     * Builds a new {@link Statement.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link Statement.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(sid, effect, principal, action, resource, condition);
        return builder;
    }

    /**
     * Class to build instances of {@link Statement}.
     */
    public static class Builder {
        private String sid;
        private String effect;
        private Principal principal;
        private String action;
        private String resource;
        private Condition condition;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  sid  String value for sid.
         * @param  effect  String value for effect.
         * @param  principal  Principal value for principal.
         * @param  action  String value for action.
         * @param  resource  String value for resource.
         * @param  condition  Condition value for condition.
         */
        public Builder(String sid, String effect, Principal principal, String action,
                String resource, Condition condition) {
            this.sid = sid;
            this.effect = effect;
            this.principal = principal;
            this.action = action;
            this.resource = resource;
            this.condition = condition;
        }

        /**
         * Setter for sid.
         * @param  sid  String value for sid.
         * @return Builder
         */
        public Builder sid(String sid) {
            this.sid = sid;
            return this;
        }

        /**
         * Setter for effect.
         * @param  effect  String value for effect.
         * @return Builder
         */
        public Builder effect(String effect) {
            this.effect = effect;
            return this;
        }

        /**
         * Setter for principal.
         * @param  principal  Principal value for principal.
         * @return Builder
         */
        public Builder principal(Principal principal) {
            this.principal = principal;
            return this;
        }

        /**
         * Setter for action.
         * @param  action  String value for action.
         * @return Builder
         */
        public Builder action(String action) {
            this.action = action;
            return this;
        }

        /**
         * Setter for resource.
         * @param  resource  String value for resource.
         * @return Builder
         */
        public Builder resource(String resource) {
            this.resource = resource;
            return this;
        }

        /**
         * Setter for condition.
         * @param  condition  Condition value for condition.
         * @return Builder
         */
        public Builder condition(Condition condition) {
            this.condition = condition;
            return this;
        }

        /**
         * Builds a new {@link Statement} object using the set fields.
         * @return {@link Statement}
         */
        public Statement build() {
            return new Statement(sid, effect, principal, action, resource, condition);
        }
    }
}
