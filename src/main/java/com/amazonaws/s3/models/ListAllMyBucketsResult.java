/*
 * AWSS3Lib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.amazonaws.s3.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonSetter;
import javax.xml.bind.annotation.XmlElement;

/**
 * This is a model class for ListAllMyBucketsResult type.
 */
public class ListAllMyBucketsResult {
    private Owner owner;
    private Buckets buckets;

    /**
     * Default constructor.
     */
    public ListAllMyBucketsResult() {
    }

    /**
     * Initialization constructor.
     * @param  owner  Owner value for owner.
     * @param  buckets  Buckets value for buckets.
     */
    public ListAllMyBucketsResult(
            Owner owner,
            Buckets buckets) {
        this.owner = owner;
        this.buckets = buckets;
    }

    /**
     * Getter for Owner.
     * @return Returns the Owner
     */
    @JsonGetter("Owner")
    @XmlElement(name = "Owner")
    public Owner getOwner() {
        return owner;
    }

    /**
     * Setter for Owner.
     * @param owner Value for Owner
     */
    @JsonSetter("Owner")
    public void setOwner(Owner owner) {
        this.owner = owner;
    }

    /**
     * Getter for Buckets.
     * @return Returns the Buckets
     */
    @JsonGetter("Buckets")
    @XmlElement(name = "Buckets")
    public Buckets getBuckets() {
        return buckets;
    }

    /**
     * Setter for Buckets.
     * @param buckets Value for Buckets
     */
    @JsonSetter("Buckets")
    public void setBuckets(Buckets buckets) {
        this.buckets = buckets;
    }

    /**
     * Converts this ListAllMyBucketsResult into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "ListAllMyBucketsResult [" + "owner=" + owner + ", buckets=" + buckets + "]";
    }

    /**
     * Builds a new {@link ListAllMyBucketsResult.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link ListAllMyBucketsResult.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(owner, buckets);
        return builder;
    }

    /**
     * Class to build instances of {@link ListAllMyBucketsResult}.
     */
    public static class Builder {
        private Owner owner;
        private Buckets buckets;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  owner  Owner value for owner.
         * @param  buckets  Buckets value for buckets.
         */
        public Builder(Owner owner, Buckets buckets) {
            this.owner = owner;
            this.buckets = buckets;
        }

        /**
         * Setter for owner.
         * @param  owner  Owner value for owner.
         * @return Builder
         */
        public Builder owner(Owner owner) {
            this.owner = owner;
            return this;
        }

        /**
         * Setter for buckets.
         * @param  buckets  Buckets value for buckets.
         * @return Builder
         */
        public Builder buckets(Buckets buckets) {
            this.buckets = buckets;
            return this;
        }

        /**
         * Builds a new {@link ListAllMyBucketsResult} object using the set fields.
         * @return {@link ListAllMyBucketsResult}
         */
        public ListAllMyBucketsResult build() {
            return new ListAllMyBucketsResult(owner, buckets);
        }
    }
}
