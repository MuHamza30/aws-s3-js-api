/*
 * AWSS3Lib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.amazonaws.s3.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonSetter;
import javax.xml.bind.annotation.XmlElement;

/**
 * This is a model class for Version type.
 */
public class Version {
    private String key;
    private String versionId;
    private boolean isLatest;
    private String lastModified;
    private String eTag;
    private int size;
    private Owner owner;
    private String storageClass;

    /**
     * Default constructor.
     */
    public Version() {
    }

    /**
     * Initialization constructor.
     * @param  key  String value for key.
     * @param  versionId  String value for versionId.
     * @param  isLatest  boolean value for isLatest.
     * @param  lastModified  String value for lastModified.
     * @param  eTag  String value for eTag.
     * @param  size  int value for size.
     * @param  owner  Owner value for owner.
     * @param  storageClass  String value for storageClass.
     */
    public Version(
            String key,
            String versionId,
            boolean isLatest,
            String lastModified,
            String eTag,
            int size,
            Owner owner,
            String storageClass) {
        this.key = key;
        this.versionId = versionId;
        this.isLatest = isLatest;
        this.lastModified = lastModified;
        this.eTag = eTag;
        this.size = size;
        this.owner = owner;
        this.storageClass = storageClass;
    }

    /**
     * Getter for Key.
     * @return Returns the String
     */
    @JsonGetter("Key")
    @XmlElement(name = "Key")
    public String getKey() {
        return key;
    }

    /**
     * Setter for Key.
     * @param key Value for String
     */
    @JsonSetter("Key")
    public void setKey(String key) {
        this.key = key;
    }

    /**
     * Getter for VersionId.
     * @return Returns the String
     */
    @JsonGetter("VersionId")
    @XmlElement(name = "VersionId")
    public String getVersionId() {
        return versionId;
    }

    /**
     * Setter for VersionId.
     * @param versionId Value for String
     */
    @JsonSetter("VersionId")
    public void setVersionId(String versionId) {
        this.versionId = versionId;
    }

    /**
     * Getter for IsLatest.
     * @return Returns the boolean
     */
    @JsonGetter("IsLatest")
    @XmlElement(name = "IsLatest")
    public boolean getIsLatest() {
        return isLatest;
    }

    /**
     * Setter for IsLatest.
     * @param isLatest Value for boolean
     */
    @JsonSetter("IsLatest")
    public void setIsLatest(boolean isLatest) {
        this.isLatest = isLatest;
    }

    /**
     * Getter for LastModified.
     * @return Returns the String
     */
    @JsonGetter("LastModified")
    @XmlElement(name = "LastModified")
    public String getLastModified() {
        return lastModified;
    }

    /**
     * Setter for LastModified.
     * @param lastModified Value for String
     */
    @JsonSetter("LastModified")
    public void setLastModified(String lastModified) {
        this.lastModified = lastModified;
    }

    /**
     * Getter for ETag.
     * @return Returns the String
     */
    @JsonGetter("ETag")
    @XmlElement(name = "ETag")
    public String getETag() {
        return eTag;
    }

    /**
     * Setter for ETag.
     * @param eTag Value for String
     */
    @JsonSetter("ETag")
    public void setETag(String eTag) {
        this.eTag = eTag;
    }

    /**
     * Getter for Size.
     * @return Returns the int
     */
    @JsonGetter("Size")
    @XmlElement(name = "Size")
    public int getSize() {
        return size;
    }

    /**
     * Setter for Size.
     * @param size Value for int
     */
    @JsonSetter("Size")
    public void setSize(int size) {
        this.size = size;
    }

    /**
     * Getter for Owner.
     * @return Returns the Owner
     */
    @JsonGetter("Owner")
    @XmlElement(name = "Owner")
    public Owner getOwner() {
        return owner;
    }

    /**
     * Setter for Owner.
     * @param owner Value for Owner
     */
    @JsonSetter("Owner")
    public void setOwner(Owner owner) {
        this.owner = owner;
    }

    /**
     * Getter for StorageClass.
     * @return Returns the String
     */
    @JsonGetter("StorageClass")
    @XmlElement(name = "StorageClass")
    public String getStorageClass() {
        return storageClass;
    }

    /**
     * Setter for StorageClass.
     * @param storageClass Value for String
     */
    @JsonSetter("StorageClass")
    public void setStorageClass(String storageClass) {
        this.storageClass = storageClass;
    }

    /**
     * Converts this Version into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "Version [" + "key=" + key + ", versionId=" + versionId + ", isLatest=" + isLatest
                + ", lastModified=" + lastModified + ", eTag=" + eTag + ", size=" + size
                + ", owner=" + owner + ", storageClass=" + storageClass + "]";
    }

    /**
     * Builds a new {@link Version.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link Version.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(key, versionId, isLatest, lastModified, eTag, size, owner,
                storageClass);
        return builder;
    }

    /**
     * Class to build instances of {@link Version}.
     */
    public static class Builder {
        private String key;
        private String versionId;
        private boolean isLatest;
        private String lastModified;
        private String eTag;
        private int size;
        private Owner owner;
        private String storageClass;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  key  String value for key.
         * @param  versionId  String value for versionId.
         * @param  isLatest  boolean value for isLatest.
         * @param  lastModified  String value for lastModified.
         * @param  eTag  String value for eTag.
         * @param  size  int value for size.
         * @param  owner  Owner value for owner.
         * @param  storageClass  String value for storageClass.
         */
        public Builder(String key, String versionId, boolean isLatest, String lastModified,
                String eTag, int size, Owner owner, String storageClass) {
            this.key = key;
            this.versionId = versionId;
            this.isLatest = isLatest;
            this.lastModified = lastModified;
            this.eTag = eTag;
            this.size = size;
            this.owner = owner;
            this.storageClass = storageClass;
        }

        /**
         * Setter for key.
         * @param  key  String value for key.
         * @return Builder
         */
        public Builder key(String key) {
            this.key = key;
            return this;
        }

        /**
         * Setter for versionId.
         * @param  versionId  String value for versionId.
         * @return Builder
         */
        public Builder versionId(String versionId) {
            this.versionId = versionId;
            return this;
        }

        /**
         * Setter for isLatest.
         * @param  isLatest  boolean value for isLatest.
         * @return Builder
         */
        public Builder isLatest(boolean isLatest) {
            this.isLatest = isLatest;
            return this;
        }

        /**
         * Setter for lastModified.
         * @param  lastModified  String value for lastModified.
         * @return Builder
         */
        public Builder lastModified(String lastModified) {
            this.lastModified = lastModified;
            return this;
        }

        /**
         * Setter for eTag.
         * @param  eTag  String value for eTag.
         * @return Builder
         */
        public Builder eTag(String eTag) {
            this.eTag = eTag;
            return this;
        }

        /**
         * Setter for size.
         * @param  size  int value for size.
         * @return Builder
         */
        public Builder size(int size) {
            this.size = size;
            return this;
        }

        /**
         * Setter for owner.
         * @param  owner  Owner value for owner.
         * @return Builder
         */
        public Builder owner(Owner owner) {
            this.owner = owner;
            return this;
        }

        /**
         * Setter for storageClass.
         * @param  storageClass  String value for storageClass.
         * @return Builder
         */
        public Builder storageClass(String storageClass) {
            this.storageClass = storageClass;
            return this;
        }

        /**
         * Builds a new {@link Version} object using the set fields.
         * @return {@link Version}
         */
        public Version build() {
            return new Version(key, versionId, isLatest, lastModified, eTag, size, owner,
                    storageClass);
        }
    }
}
