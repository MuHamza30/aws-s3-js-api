/*
 * AWSS3Lib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.amazonaws.s3.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonSetter;
import javax.xml.bind.annotation.XmlElement;

/**
 * This is a model class for ListMultipartUploadsResult type.
 */
public class ListMultipartUploadsResult {
    private String bucket;
    private String keyMarker;
    private String uploadIdMarker;
    private String nextKeyMarker;
    private String nextUploadIdMarker;
    private int maxUploads;
    private boolean isTruncated;

    /**
     * Default constructor.
     */
    public ListMultipartUploadsResult() {
    }

    /**
     * Initialization constructor.
     * @param  bucket  String value for bucket.
     * @param  keyMarker  String value for keyMarker.
     * @param  uploadIdMarker  String value for uploadIdMarker.
     * @param  nextKeyMarker  String value for nextKeyMarker.
     * @param  nextUploadIdMarker  String value for nextUploadIdMarker.
     * @param  maxUploads  int value for maxUploads.
     * @param  isTruncated  boolean value for isTruncated.
     */
    public ListMultipartUploadsResult(
            String bucket,
            String keyMarker,
            String uploadIdMarker,
            String nextKeyMarker,
            String nextUploadIdMarker,
            int maxUploads,
            boolean isTruncated) {
        this.bucket = bucket;
        this.keyMarker = keyMarker;
        this.uploadIdMarker = uploadIdMarker;
        this.nextKeyMarker = nextKeyMarker;
        this.nextUploadIdMarker = nextUploadIdMarker;
        this.maxUploads = maxUploads;
        this.isTruncated = isTruncated;
    }

    /**
     * Getter for Bucket.
     * @return Returns the String
     */
    @JsonGetter("Bucket")
    @XmlElement(name = "Bucket")
    public String getBucket() {
        return bucket;
    }

    /**
     * Setter for Bucket.
     * @param bucket Value for String
     */
    @JsonSetter("Bucket")
    public void setBucket(String bucket) {
        this.bucket = bucket;
    }

    /**
     * Getter for KeyMarker.
     * @return Returns the String
     */
    @JsonGetter("KeyMarker")
    @XmlElement(name = "KeyMarker")
    public String getKeyMarker() {
        return keyMarker;
    }

    /**
     * Setter for KeyMarker.
     * @param keyMarker Value for String
     */
    @JsonSetter("KeyMarker")
    public void setKeyMarker(String keyMarker) {
        this.keyMarker = keyMarker;
    }

    /**
     * Getter for UploadIdMarker.
     * @return Returns the String
     */
    @JsonGetter("UploadIdMarker")
    @XmlElement(name = "UploadIdMarker")
    public String getUploadIdMarker() {
        return uploadIdMarker;
    }

    /**
     * Setter for UploadIdMarker.
     * @param uploadIdMarker Value for String
     */
    @JsonSetter("UploadIdMarker")
    public void setUploadIdMarker(String uploadIdMarker) {
        this.uploadIdMarker = uploadIdMarker;
    }

    /**
     * Getter for NextKeyMarker.
     * @return Returns the String
     */
    @JsonGetter("NextKeyMarker")
    @XmlElement(name = "NextKeyMarker")
    public String getNextKeyMarker() {
        return nextKeyMarker;
    }

    /**
     * Setter for NextKeyMarker.
     * @param nextKeyMarker Value for String
     */
    @JsonSetter("NextKeyMarker")
    public void setNextKeyMarker(String nextKeyMarker) {
        this.nextKeyMarker = nextKeyMarker;
    }

    /**
     * Getter for NextUploadIdMarker.
     * @return Returns the String
     */
    @JsonGetter("NextUploadIdMarker")
    @XmlElement(name = "NextUploadIdMarker")
    public String getNextUploadIdMarker() {
        return nextUploadIdMarker;
    }

    /**
     * Setter for NextUploadIdMarker.
     * @param nextUploadIdMarker Value for String
     */
    @JsonSetter("NextUploadIdMarker")
    public void setNextUploadIdMarker(String nextUploadIdMarker) {
        this.nextUploadIdMarker = nextUploadIdMarker;
    }

    /**
     * Getter for MaxUploads.
     * @return Returns the int
     */
    @JsonGetter("MaxUploads")
    @XmlElement(name = "MaxUploads")
    public int getMaxUploads() {
        return maxUploads;
    }

    /**
     * Setter for MaxUploads.
     * @param maxUploads Value for int
     */
    @JsonSetter("MaxUploads")
    public void setMaxUploads(int maxUploads) {
        this.maxUploads = maxUploads;
    }

    /**
     * Getter for IsTruncated.
     * @return Returns the boolean
     */
    @JsonGetter("IsTruncated")
    @XmlElement(name = "IsTruncated")
    public boolean getIsTruncated() {
        return isTruncated;
    }

    /**
     * Setter for IsTruncated.
     * @param isTruncated Value for boolean
     */
    @JsonSetter("IsTruncated")
    public void setIsTruncated(boolean isTruncated) {
        this.isTruncated = isTruncated;
    }

    /**
     * Converts this ListMultipartUploadsResult into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "ListMultipartUploadsResult [" + "bucket=" + bucket + ", keyMarker=" + keyMarker
                + ", uploadIdMarker=" + uploadIdMarker + ", nextKeyMarker=" + nextKeyMarker
                + ", nextUploadIdMarker=" + nextUploadIdMarker + ", maxUploads=" + maxUploads
                + ", isTruncated=" + isTruncated + "]";
    }

    /**
     * Builds a new {@link ListMultipartUploadsResult.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link ListMultipartUploadsResult.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(bucket, keyMarker, uploadIdMarker, nextKeyMarker,
                nextUploadIdMarker, maxUploads, isTruncated);
        return builder;
    }

    /**
     * Class to build instances of {@link ListMultipartUploadsResult}.
     */
    public static class Builder {
        private String bucket;
        private String keyMarker;
        private String uploadIdMarker;
        private String nextKeyMarker;
        private String nextUploadIdMarker;
        private int maxUploads;
        private boolean isTruncated;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  bucket  String value for bucket.
         * @param  keyMarker  String value for keyMarker.
         * @param  uploadIdMarker  String value for uploadIdMarker.
         * @param  nextKeyMarker  String value for nextKeyMarker.
         * @param  nextUploadIdMarker  String value for nextUploadIdMarker.
         * @param  maxUploads  int value for maxUploads.
         * @param  isTruncated  boolean value for isTruncated.
         */
        public Builder(String bucket, String keyMarker, String uploadIdMarker, String nextKeyMarker,
                String nextUploadIdMarker, int maxUploads, boolean isTruncated) {
            this.bucket = bucket;
            this.keyMarker = keyMarker;
            this.uploadIdMarker = uploadIdMarker;
            this.nextKeyMarker = nextKeyMarker;
            this.nextUploadIdMarker = nextUploadIdMarker;
            this.maxUploads = maxUploads;
            this.isTruncated = isTruncated;
        }

        /**
         * Setter for bucket.
         * @param  bucket  String value for bucket.
         * @return Builder
         */
        public Builder bucket(String bucket) {
            this.bucket = bucket;
            return this;
        }

        /**
         * Setter for keyMarker.
         * @param  keyMarker  String value for keyMarker.
         * @return Builder
         */
        public Builder keyMarker(String keyMarker) {
            this.keyMarker = keyMarker;
            return this;
        }

        /**
         * Setter for uploadIdMarker.
         * @param  uploadIdMarker  String value for uploadIdMarker.
         * @return Builder
         */
        public Builder uploadIdMarker(String uploadIdMarker) {
            this.uploadIdMarker = uploadIdMarker;
            return this;
        }

        /**
         * Setter for nextKeyMarker.
         * @param  nextKeyMarker  String value for nextKeyMarker.
         * @return Builder
         */
        public Builder nextKeyMarker(String nextKeyMarker) {
            this.nextKeyMarker = nextKeyMarker;
            return this;
        }

        /**
         * Setter for nextUploadIdMarker.
         * @param  nextUploadIdMarker  String value for nextUploadIdMarker.
         * @return Builder
         */
        public Builder nextUploadIdMarker(String nextUploadIdMarker) {
            this.nextUploadIdMarker = nextUploadIdMarker;
            return this;
        }

        /**
         * Setter for maxUploads.
         * @param  maxUploads  int value for maxUploads.
         * @return Builder
         */
        public Builder maxUploads(int maxUploads) {
            this.maxUploads = maxUploads;
            return this;
        }

        /**
         * Setter for isTruncated.
         * @param  isTruncated  boolean value for isTruncated.
         * @return Builder
         */
        public Builder isTruncated(boolean isTruncated) {
            this.isTruncated = isTruncated;
            return this;
        }

        /**
         * Builds a new {@link ListMultipartUploadsResult} object using the set fields.
         * @return {@link ListMultipartUploadsResult}
         */
        public ListMultipartUploadsResult build() {
            return new ListMultipartUploadsResult(bucket, keyMarker, uploadIdMarker, nextKeyMarker,
                    nextUploadIdMarker, maxUploads, isTruncated);
        }
    }
}
