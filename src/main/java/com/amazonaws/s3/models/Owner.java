/*
 * AWSS3Lib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.amazonaws.s3.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonSetter;
import javax.xml.bind.annotation.XmlElement;

/**
 * This is a model class for Owner type.
 */
public class Owner {
    private String iD;
    private String displayName;

    /**
     * Default constructor.
     */
    public Owner() {
    }

    /**
     * Initialization constructor.
     * @param  iD  String value for iD.
     * @param  displayName  String value for displayName.
     */
    public Owner(
            String iD,
            String displayName) {
        this.iD = iD;
        this.displayName = displayName;
    }

    /**
     * Getter for ID.
     * @return Returns the String
     */
    @JsonGetter("ID")
    @XmlElement(name = "ID")
    public String getID() {
        return iD;
    }

    /**
     * Setter for ID.
     * @param iD Value for String
     */
    @JsonSetter("ID")
    public void setID(String iD) {
        this.iD = iD;
    }

    /**
     * Getter for DisplayName.
     * @return Returns the String
     */
    @JsonGetter("DisplayName")
    @XmlElement(name = "DisplayName")
    public String getDisplayName() {
        return displayName;
    }

    /**
     * Setter for DisplayName.
     * @param displayName Value for String
     */
    @JsonSetter("DisplayName")
    public void setDisplayName(String displayName) {
        this.displayName = displayName;
    }

    /**
     * Converts this Owner into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "Owner [" + "iD=" + iD + ", displayName=" + displayName + "]";
    }

    /**
     * Builds a new {@link Owner.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link Owner.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(iD, displayName);
        return builder;
    }

    /**
     * Class to build instances of {@link Owner}.
     */
    public static class Builder {
        private String iD;
        private String displayName;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  iD  String value for iD.
         * @param  displayName  String value for displayName.
         */
        public Builder(String iD, String displayName) {
            this.iD = iD;
            this.displayName = displayName;
        }

        /**
         * Setter for iD.
         * @param  iD  String value for iD.
         * @return Builder
         */
        public Builder iD(String iD) {
            this.iD = iD;
            return this;
        }

        /**
         * Setter for displayName.
         * @param  displayName  String value for displayName.
         * @return Builder
         */
        public Builder displayName(String displayName) {
            this.displayName = displayName;
            return this;
        }

        /**
         * Builds a new {@link Owner} object using the set fields.
         * @return {@link Owner}
         */
        public Owner build() {
            return new Owner(iD, displayName);
        }
    }
}
