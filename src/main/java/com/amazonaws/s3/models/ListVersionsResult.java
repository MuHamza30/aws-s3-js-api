/*
 * AWSS3Lib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.amazonaws.s3.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonSetter;
import java.util.List;
import javax.xml.bind.annotation.XmlElement;

/**
 * This is a model class for ListVersionsResult type.
 */
public class ListVersionsResult {
    private String name;
    private String prefix;
    private String keyMarker;
    private String versionIdMarker;
    private int maxKeys;
    private boolean isTruncated;
    private List<Version> version;

    /**
     * Default constructor.
     */
    public ListVersionsResult() {
    }

    /**
     * Initialization constructor.
     * @param  name  String value for name.
     * @param  prefix  String value for prefix.
     * @param  keyMarker  String value for keyMarker.
     * @param  versionIdMarker  String value for versionIdMarker.
     * @param  maxKeys  int value for maxKeys.
     * @param  isTruncated  boolean value for isTruncated.
     * @param  version  List of Version value for version.
     */
    public ListVersionsResult(
            String name,
            String prefix,
            String keyMarker,
            String versionIdMarker,
            int maxKeys,
            boolean isTruncated,
            List<Version> version) {
        this.name = name;
        this.prefix = prefix;
        this.keyMarker = keyMarker;
        this.versionIdMarker = versionIdMarker;
        this.maxKeys = maxKeys;
        this.isTruncated = isTruncated;
        this.version = version;
    }

    /**
     * Getter for Name.
     * @return Returns the String
     */
    @JsonGetter("Name")
    @XmlElement(name = "Name")
    public String getName() {
        return name;
    }

    /**
     * Setter for Name.
     * @param name Value for String
     */
    @JsonSetter("Name")
    public void setName(String name) {
        this.name = name;
    }

    /**
     * Getter for Prefix.
     * @return Returns the String
     */
    @JsonGetter("Prefix")
    @XmlElement(name = "Prefix")
    public String getPrefix() {
        return prefix;
    }

    /**
     * Setter for Prefix.
     * @param prefix Value for String
     */
    @JsonSetter("Prefix")
    public void setPrefix(String prefix) {
        this.prefix = prefix;
    }

    /**
     * Getter for KeyMarker.
     * @return Returns the String
     */
    @JsonGetter("KeyMarker")
    @XmlElement(name = "KeyMarker")
    public String getKeyMarker() {
        return keyMarker;
    }

    /**
     * Setter for KeyMarker.
     * @param keyMarker Value for String
     */
    @JsonSetter("KeyMarker")
    public void setKeyMarker(String keyMarker) {
        this.keyMarker = keyMarker;
    }

    /**
     * Getter for VersionIdMarker.
     * @return Returns the String
     */
    @JsonGetter("VersionIdMarker")
    @XmlElement(name = "VersionIdMarker")
    public String getVersionIdMarker() {
        return versionIdMarker;
    }

    /**
     * Setter for VersionIdMarker.
     * @param versionIdMarker Value for String
     */
    @JsonSetter("VersionIdMarker")
    public void setVersionIdMarker(String versionIdMarker) {
        this.versionIdMarker = versionIdMarker;
    }

    /**
     * Getter for MaxKeys.
     * @return Returns the int
     */
    @JsonGetter("MaxKeys")
    @XmlElement(name = "MaxKeys")
    public int getMaxKeys() {
        return maxKeys;
    }

    /**
     * Setter for MaxKeys.
     * @param maxKeys Value for int
     */
    @JsonSetter("MaxKeys")
    public void setMaxKeys(int maxKeys) {
        this.maxKeys = maxKeys;
    }

    /**
     * Getter for IsTruncated.
     * @return Returns the boolean
     */
    @JsonGetter("IsTruncated")
    @XmlElement(name = "IsTruncated")
    public boolean getIsTruncated() {
        return isTruncated;
    }

    /**
     * Setter for IsTruncated.
     * @param isTruncated Value for boolean
     */
    @JsonSetter("IsTruncated")
    public void setIsTruncated(boolean isTruncated) {
        this.isTruncated = isTruncated;
    }

    /**
     * Getter for Version.
     * @return Returns the List of Version
     */
    @JsonGetter("Version")
    @XmlElement(name = "Version")
    public List<Version> getVersion() {
        return version;
    }

    /**
     * Setter for Version.
     * @param version Value for List of Version
     */
    @JsonSetter("Version")
    public void setVersion(List<Version> version) {
        this.version = version;
    }

    /**
     * Converts this ListVersionsResult into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "ListVersionsResult [" + "name=" + name + ", prefix=" + prefix + ", keyMarker="
                + keyMarker + ", versionIdMarker=" + versionIdMarker + ", maxKeys=" + maxKeys
                + ", isTruncated=" + isTruncated + ", version=" + version + "]";
    }

    /**
     * Builds a new {@link ListVersionsResult.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link ListVersionsResult.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(name, prefix, keyMarker, versionIdMarker, maxKeys,
                isTruncated, version);
        return builder;
    }

    /**
     * Class to build instances of {@link ListVersionsResult}.
     */
    public static class Builder {
        private String name;
        private String prefix;
        private String keyMarker;
        private String versionIdMarker;
        private int maxKeys;
        private boolean isTruncated;
        private List<Version> version;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  name  String value for name.
         * @param  prefix  String value for prefix.
         * @param  keyMarker  String value for keyMarker.
         * @param  versionIdMarker  String value for versionIdMarker.
         * @param  maxKeys  int value for maxKeys.
         * @param  isTruncated  boolean value for isTruncated.
         * @param  version  List of Version value for version.
         */
        public Builder(String name, String prefix, String keyMarker, String versionIdMarker,
                int maxKeys, boolean isTruncated, List<Version> version) {
            this.name = name;
            this.prefix = prefix;
            this.keyMarker = keyMarker;
            this.versionIdMarker = versionIdMarker;
            this.maxKeys = maxKeys;
            this.isTruncated = isTruncated;
            this.version = version;
        }

        /**
         * Setter for name.
         * @param  name  String value for name.
         * @return Builder
         */
        public Builder name(String name) {
            this.name = name;
            return this;
        }

        /**
         * Setter for prefix.
         * @param  prefix  String value for prefix.
         * @return Builder
         */
        public Builder prefix(String prefix) {
            this.prefix = prefix;
            return this;
        }

        /**
         * Setter for keyMarker.
         * @param  keyMarker  String value for keyMarker.
         * @return Builder
         */
        public Builder keyMarker(String keyMarker) {
            this.keyMarker = keyMarker;
            return this;
        }

        /**
         * Setter for versionIdMarker.
         * @param  versionIdMarker  String value for versionIdMarker.
         * @return Builder
         */
        public Builder versionIdMarker(String versionIdMarker) {
            this.versionIdMarker = versionIdMarker;
            return this;
        }

        /**
         * Setter for maxKeys.
         * @param  maxKeys  int value for maxKeys.
         * @return Builder
         */
        public Builder maxKeys(int maxKeys) {
            this.maxKeys = maxKeys;
            return this;
        }

        /**
         * Setter for isTruncated.
         * @param  isTruncated  boolean value for isTruncated.
         * @return Builder
         */
        public Builder isTruncated(boolean isTruncated) {
            this.isTruncated = isTruncated;
            return this;
        }

        /**
         * Setter for version.
         * @param  version  List of Version value for version.
         * @return Builder
         */
        public Builder version(List<Version> version) {
            this.version = version;
            return this;
        }

        /**
         * Builds a new {@link ListVersionsResult} object using the set fields.
         * @return {@link ListVersionsResult}
         */
        public ListVersionsResult build() {
            return new ListVersionsResult(name, prefix, keyMarker, versionIdMarker, maxKeys,
                    isTruncated, version);
        }
    }
}
