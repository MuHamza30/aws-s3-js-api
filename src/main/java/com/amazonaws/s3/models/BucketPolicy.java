/*
 * AWSS3Lib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.amazonaws.s3.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonSetter;
import java.util.List;
import javax.xml.bind.annotation.XmlElement;

/**
 * This is a model class for BucketPolicy type.
 */
public class BucketPolicy {
    private String version;
    private String id;
    private List<Statement> statement;

    /**
     * Default constructor.
     */
    public BucketPolicy() {
    }

    /**
     * Initialization constructor.
     * @param  version  String value for version.
     * @param  id  String value for id.
     * @param  statement  List of Statement value for statement.
     */
    public BucketPolicy(
            String version,
            String id,
            List<Statement> statement) {
        this.version = version;
        this.id = id;
        this.statement = statement;
    }

    /**
     * Getter for Version.
     * @return Returns the String
     */
    @JsonGetter("Version")
    @XmlElement(name = "Version")
    public String getVersion() {
        return version;
    }

    /**
     * Setter for Version.
     * @param version Value for String
     */
    @JsonSetter("Version")
    public void setVersion(String version) {
        this.version = version;
    }

    /**
     * Getter for Id.
     * @return Returns the String
     */
    @JsonGetter("Id")
    @XmlElement(name = "Id")
    public String getId() {
        return id;
    }

    /**
     * Setter for Id.
     * @param id Value for String
     */
    @JsonSetter("Id")
    public void setId(String id) {
        this.id = id;
    }

    /**
     * Getter for Statement.
     * @return Returns the List of Statement
     */
    @JsonGetter("Statement")
    @XmlElement(name = "Statement")
    public List<Statement> getStatement() {
        return statement;
    }

    /**
     * Setter for Statement.
     * @param statement Value for List of Statement
     */
    @JsonSetter("Statement")
    public void setStatement(List<Statement> statement) {
        this.statement = statement;
    }

    /**
     * Converts this BucketPolicy into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "BucketPolicy [" + "version=" + version + ", id=" + id + ", statement=" + statement
                + "]";
    }

    /**
     * Builds a new {@link BucketPolicy.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link BucketPolicy.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(version, id, statement);
        return builder;
    }

    /**
     * Class to build instances of {@link BucketPolicy}.
     */
    public static class Builder {
        private String version;
        private String id;
        private List<Statement> statement;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  version  String value for version.
         * @param  id  String value for id.
         * @param  statement  List of Statement value for statement.
         */
        public Builder(String version, String id, List<Statement> statement) {
            this.version = version;
            this.id = id;
            this.statement = statement;
        }

        /**
         * Setter for version.
         * @param  version  String value for version.
         * @return Builder
         */
        public Builder version(String version) {
            this.version = version;
            return this;
        }

        /**
         * Setter for id.
         * @param  id  String value for id.
         * @return Builder
         */
        public Builder id(String id) {
            this.id = id;
            return this;
        }

        /**
         * Setter for statement.
         * @param  statement  List of Statement value for statement.
         * @return Builder
         */
        public Builder statement(List<Statement> statement) {
            this.statement = statement;
            return this;
        }

        /**
         * Builds a new {@link BucketPolicy} object using the set fields.
         * @return {@link BucketPolicy}
         */
        public BucketPolicy build() {
            return new BucketPolicy(version, id, statement);
        }
    }
}
