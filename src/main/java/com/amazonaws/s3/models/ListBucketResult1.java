/*
 * AWSS3Lib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.amazonaws.s3.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonSetter;
import java.util.List;
import javax.xml.bind.annotation.XmlElement;

/**
 * This is a model class for ListBucketResult1 type.
 */
public class ListBucketResult1 {
    private String name;
    private String prefix;
    private String marker;
    private int maxKeys;
    private boolean isTruncated;
    private List<Contents> contents;

    /**
     * Default constructor.
     */
    public ListBucketResult1() {
    }

    /**
     * Initialization constructor.
     * @param  name  String value for name.
     * @param  prefix  String value for prefix.
     * @param  marker  String value for marker.
     * @param  maxKeys  int value for maxKeys.
     * @param  isTruncated  boolean value for isTruncated.
     * @param  contents  List of Contents value for contents.
     */
    public ListBucketResult1(
            String name,
            String prefix,
            String marker,
            int maxKeys,
            boolean isTruncated,
            List<Contents> contents) {
        this.name = name;
        this.prefix = prefix;
        this.marker = marker;
        this.maxKeys = maxKeys;
        this.isTruncated = isTruncated;
        this.contents = contents;
    }

    /**
     * Getter for Name.
     * @return Returns the String
     */
    @JsonGetter("Name")
    @XmlElement(name = "Name")
    public String getName() {
        return name;
    }

    /**
     * Setter for Name.
     * @param name Value for String
     */
    @JsonSetter("Name")
    public void setName(String name) {
        this.name = name;
    }

    /**
     * Getter for Prefix.
     * @return Returns the String
     */
    @JsonGetter("Prefix")
    @XmlElement(name = "Prefix")
    public String getPrefix() {
        return prefix;
    }

    /**
     * Setter for Prefix.
     * @param prefix Value for String
     */
    @JsonSetter("Prefix")
    public void setPrefix(String prefix) {
        this.prefix = prefix;
    }

    /**
     * Getter for Marker.
     * @return Returns the String
     */
    @JsonGetter("Marker")
    @XmlElement(name = "Marker")
    public String getMarker() {
        return marker;
    }

    /**
     * Setter for Marker.
     * @param marker Value for String
     */
    @JsonSetter("Marker")
    public void setMarker(String marker) {
        this.marker = marker;
    }

    /**
     * Getter for MaxKeys.
     * @return Returns the int
     */
    @JsonGetter("MaxKeys")
    @XmlElement(name = "MaxKeys")
    public int getMaxKeys() {
        return maxKeys;
    }

    /**
     * Setter for MaxKeys.
     * @param maxKeys Value for int
     */
    @JsonSetter("MaxKeys")
    public void setMaxKeys(int maxKeys) {
        this.maxKeys = maxKeys;
    }

    /**
     * Getter for IsTruncated.
     * @return Returns the boolean
     */
    @JsonGetter("IsTruncated")
    @XmlElement(name = "IsTruncated")
    public boolean getIsTruncated() {
        return isTruncated;
    }

    /**
     * Setter for IsTruncated.
     * @param isTruncated Value for boolean
     */
    @JsonSetter("IsTruncated")
    public void setIsTruncated(boolean isTruncated) {
        this.isTruncated = isTruncated;
    }

    /**
     * Getter for Contents.
     * @return Returns the List of Contents
     */
    @JsonGetter("Contents")
    @XmlElement(name = "Contents")
    public List<Contents> getContents() {
        return contents;
    }

    /**
     * Setter for Contents.
     * @param contents Value for List of Contents
     */
    @JsonSetter("Contents")
    public void setContents(List<Contents> contents) {
        this.contents = contents;
    }

    /**
     * Converts this ListBucketResult1 into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "ListBucketResult1 [" + "name=" + name + ", prefix=" + prefix + ", marker=" + marker
                + ", maxKeys=" + maxKeys + ", isTruncated=" + isTruncated + ", contents=" + contents
                + "]";
    }

    /**
     * Builds a new {@link ListBucketResult1.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link ListBucketResult1.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(name, prefix, marker, maxKeys, isTruncated, contents);
        return builder;
    }

    /**
     * Class to build instances of {@link ListBucketResult1}.
     */
    public static class Builder {
        private String name;
        private String prefix;
        private String marker;
        private int maxKeys;
        private boolean isTruncated;
        private List<Contents> contents;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  name  String value for name.
         * @param  prefix  String value for prefix.
         * @param  marker  String value for marker.
         * @param  maxKeys  int value for maxKeys.
         * @param  isTruncated  boolean value for isTruncated.
         * @param  contents  List of Contents value for contents.
         */
        public Builder(String name, String prefix, String marker, int maxKeys, boolean isTruncated,
                List<Contents> contents) {
            this.name = name;
            this.prefix = prefix;
            this.marker = marker;
            this.maxKeys = maxKeys;
            this.isTruncated = isTruncated;
            this.contents = contents;
        }

        /**
         * Setter for name.
         * @param  name  String value for name.
         * @return Builder
         */
        public Builder name(String name) {
            this.name = name;
            return this;
        }

        /**
         * Setter for prefix.
         * @param  prefix  String value for prefix.
         * @return Builder
         */
        public Builder prefix(String prefix) {
            this.prefix = prefix;
            return this;
        }

        /**
         * Setter for marker.
         * @param  marker  String value for marker.
         * @return Builder
         */
        public Builder marker(String marker) {
            this.marker = marker;
            return this;
        }

        /**
         * Setter for maxKeys.
         * @param  maxKeys  int value for maxKeys.
         * @return Builder
         */
        public Builder maxKeys(int maxKeys) {
            this.maxKeys = maxKeys;
            return this;
        }

        /**
         * Setter for isTruncated.
         * @param  isTruncated  boolean value for isTruncated.
         * @return Builder
         */
        public Builder isTruncated(boolean isTruncated) {
            this.isTruncated = isTruncated;
            return this;
        }

        /**
         * Setter for contents.
         * @param  contents  List of Contents value for contents.
         * @return Builder
         */
        public Builder contents(List<Contents> contents) {
            this.contents = contents;
            return this;
        }

        /**
         * Builds a new {@link ListBucketResult1} object using the set fields.
         * @return {@link ListBucketResult1}
         */
        public ListBucketResult1 build() {
            return new ListBucketResult1(name, prefix, marker, maxKeys, isTruncated, contents);
        }
    }
}
