/**
 * AWS S3Lib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import { ApiResponse, RequestOptions } from '../core.js';
import { string } from '../schema.js';
import { BaseController } from './baseController.js';

export class LoggingController extends BaseController {
  /**
   * Returns the logging status of a bucket and the permissions users have to view and modify that status.
   * To use GET, you must be the bucket owner.
   *
   * @param logging
   * @param xAmzContentSha256
   * @param bucket
   * @return Response from the API call
   */
  async bucketLogging(
    logging: string,
    xAmzContentSha256: string,
    bucket: string,
    requestOptions?: RequestOptions
  ): Promise<ApiResponse<string>> {
    const req = this.createRequest('GET');
    const mapped = req.prepareArgs({
      logging: [logging, string()],
      xAmzContentSha256: [xAmzContentSha256, string()],
      bucket: [bucket, string()],
    });
    req.header('x-amz-content-sha256', mapped.xAmzContentSha256);
    req.query('logging', mapped.logging);
    req.appendTemplatePath`/${mapped.bucket}`;
    return req.callAsXml('BucketLoggingStatus', string(), requestOptions);
  }

  /**
   * Set the logging parameters for a bucket and to specify permissions for who can view and modify the
   * logging parameters. All logs are saved to buckets in the same AWS Region as the source bucket. To
   * set the logging status of a bucket, you must be the bucket owner.
   *
   * @param logging
   * @param contentMD5
   * @param body
   * @param bucket
   * @return Response from the API call
   */
  async bucketLogging1(
    logging: string,
    contentMD5: string,
    body: string,
    bucket: string,
    requestOptions?: RequestOptions
  ): Promise<ApiResponse<void>> {
    const req = this.createRequest('PUT');
    const mapped = req.prepareArgs({
      logging: [logging, string()],
      contentMD5: [contentMD5, string()],
      body: [body, string()],
      bucket: [bucket, string()],
    });
    req.header('Content-MD5', mapped.contentMD5);
    req.query('logging', mapped.logging);
    req.text(mapped.body);
    req.appendTemplatePath`/${mapped.bucket}`;
    return req.call(requestOptions);
  }
}
